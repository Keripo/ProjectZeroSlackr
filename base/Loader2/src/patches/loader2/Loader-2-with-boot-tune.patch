Index: config.c
===================================================================
--- config.c	(revision 2419)
+++ config.c	(working copy)
@@ -103,6 +103,19 @@
 	"(hd0,0)/linx",
 	0 };
 
+const char *tunenames[] = {
+	"(hd0,1)/boot.pzm",
+	"(hd0,1)/Notes/boot.pzm",
+	"(hd0,1)/boot/boot.pzm",
+	"(hd0,1)/boot_tune.pzm",
+	"(hd0,1)/Notes/boot_tune.pzm",
+	"(hd0,1)/boot/boot_tune.pzm",
+	"(hd0,2)/boot.pzm",
+	"(hd0,2)/boot/boot.pzm",
+	"(hd0,2)/boot_tune.pzm",
+	"(hd0,2)/boot/boot_tune.pzm",
+	0 };
+
 int is_applefw_img (char *firstblock);
 
 static config_image_t configimgs[MAX_MENU_ITEMS];
@@ -123,6 +136,7 @@
     config.hicolor   = fb_rgb(64,128,0);
     config.beep_time = 50;
     config.beep_period = 30;
+    config.boot_tune = (char *)find_somewhere (tunenames, "boot tune", NULL);
 
     {
         // preset default menu items
@@ -240,6 +254,8 @@
                 config.beep_time = mlc_atoi (value);
             } else if (!mlc_strcmp (p, "beep_period")) {
                 config.beep_period = mlc_atoi (value);
+            } else if (!mlc_strcmp (p, "boot_tune")) {
+                config.boot_tune = value;
             } else if (!mlc_strcmp (p, "ata_standby_code")) {
                 config.ata_standby_code = mlc_atoi (value);
             } else {
Index: config.h
===================================================================
--- config.h	(revision 2419)
+++ config.h	(working copy)
@@ -15,6 +15,7 @@
 
 typedef struct {
   config_image_t *image;
+  char *boot_tune;
   int16 timeout;
   int16 def;       // default item index in menu, 1-based
   int16 items;
Index: loader.c
===================================================================
--- loader.c	(revision 2419)
+++ loader.c	(working copy)
@@ -144,6 +144,61 @@
   console_printcount = 0; // prevents userconfirm() from doing something
 }
 
+// We assume piezo maker format
+static void play_music (char *file)
+{
+  int f;
+  char *p, *pzm_file;
+  f = vfs_open (file);
+  if (f == -1) {
+    mlc_printf ("boot_tune file %s not found.\n", file);
+    return;
+  }
+  keypad_flush();
+
+  // Copy content to memory
+  int len;
+  pzm_file = mlc_malloc (4096);
+  mlc_memset (pzm_file, 0, 4096);
+  if ((len = vfs_read (pzm_file, 1, 4096, f)) == 4096) {
+    mlc_printf ("Boot music file is too long, reading only first 4k\n");
+    --len;
+  }
+  pzm_file[len] = 0;
+  
+  // change all CRs into LFs (for Windows and Mac users)
+  p = pzm_file;
+  while (*p) {
+    if (*p == '\r') *p = '\n';
+    ++p;
+  }
+  p = pzm_file;
+  
+#define next_line(pointer) \
+  ({ \
+    pointer = mlc_strchr (pointer, '\n'); \
+    pointer++; \
+  }) \
+  
+  // Ignore non-tone lines added by piezo maker
+  while (*p == '#') // Comments
+    next_line(p);
+  next_line(p); // Number of tones
+  
+  // Play tones
+  while (p && *p && !keypad_getkey()) {
+    while (*p == '#') // Comments
+      next_line(p);
+    int period, duration;
+    period = mlc_atoi(p);
+    next_line(p);
+    duration = mlc_atoi(p);
+    next_line(p);
+    ipod_beep(duration, period);
+  }
+  keypad_flush();
+}
+
 static void *iram_get_end_ptr (ipod_t *ipod, int offset) 
 {
     return (void *)(ipod->iram_base + ipod->iram_full_size - 0x100 + offset);
@@ -685,6 +740,9 @@
     userconfirm ();
     test_piezo ();
   }
+  if (conf->boot_tune) {
+    play_music(conf->boot_tune);    
+  }
 
   menu_init();
   for(menuPos=0;menuPos<conf->items;menuPos++) {
