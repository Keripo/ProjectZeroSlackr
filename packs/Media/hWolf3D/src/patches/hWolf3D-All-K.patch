diff -ur Makefile Makefile
--- Makefile	2007-12-22 07:42:25.000000000 -0500
+++ Makefile	2008-08-12 21:24:40.546875000 -0400
@@ -1,4 +1,8 @@
+ifdef IPOD
+CC = arm-uclinux-elf-gcc
+else
 CC = gcc
+endif
 #CC=/opt/intel/compiler60/ia32/bin/icc
 
 #CFLAGS = -g -Wall
@@ -16,6 +20,7 @@
 SOBJS = $(OBJS) $(ROBJS) vi_svga.o
 XOBJS = $(OBJS) $(ROBJS) vi_xlib.o
 DOBJS = $(OBJS) $(ROBJS) vi_sdl.o
+HOBJS = $(OBJS) $(ROBJS) vi_hotdog.o
 
 #LDLIBS = -lm -wp_ipo
 LDLIBS = -lm
@@ -27,18 +32,43 @@
 #CFLAGS += -D_REENTRANT
 #LDLIBS += -lpthread
 
+ifdef IPOD
+CFLAGS += -I../hotdog -DIPOD
+else
 CFLAGS += $(shell sdl-config --cflags)
+endif
+
+ifdef WOLF
+ifdef SHARE
+CFLAGS += -DWMODE=0
+else
+CFLAGS += -DWMODE=1
+endif
+else
+ifdef SPEAR
+ifdef SHARE
+CFLAGS += -DWMODE=2
+else
+CFLAGS += -DWMODE=3
+endif
+endif
+endif
 
 SLDLIBS = $(LDLIBS) -lvga
 XLDLIBS = $(LDLIBS) -L/usr/X11R6/lib -lX11 -lXext
 DLDLIBS = $(LDLIBS) $(shell sdl-config --libs)
+HLDLIBS = $(LDLIBS) -L../hotdog/ipod -lhotdog -elf2flt
 
 NASM = nasm
 
 .SUFFIXES: .asm
 
 #all:	swolf3d xwolf3d sdlwolf3d
+ifdef IPOD
+all:	hwolf3d
+else
 all:	sdlwolf3d
+endif
 
 $(SOBJS): version.h id_heads.h wl_def.h
 $(XOBJS): version.h id_heads.h wl_def.h
@@ -56,8 +86,11 @@
 sdlwolf3d: $(DOBJS)
 	$(CC) -o sdlwolf3d $(DOBJS) $(DLDLIBS)
 
+hwolf3d:  $(HOBJS)
+	$(CC) -o hwolf3d $(HOBJS) $(HLDLIBS)
+
 clean:
-	rm -rf swolf3d xwolf3d sdlwolf3d *.o *.il
+	rm -rf swolf3d xwolf3d sdlwolf3d hwolf3d *.gdb *.o *.il
 
 distclean: clean
 	rm -rf *~ DEADJOE
Only in src: vi_hotdog.c
Only in src: vi_hotdog.h
diff -ur wl_def.h wl_def.h
--- wl_def.h	2007-12-22 07:42:25.000000000 -0500
+++ wl_def.h	2008-08-12 21:26:37.984375000 -0400
@@ -7,6 +7,9 @@
 #include "foreign.h"
 
 extern int vwidth, vheight; /* size of screen */
+#ifdef IPOD
+extern int in_menu;
+#endif
 
 #define NOASM
 
diff -ur wl_main.c wl_main.c
--- wl_main.c	2007-12-22 07:42:25.000000000 -0500
+++ wl_main.c	2008-08-12 21:33:22.765625000 -0400
@@ -218,7 +218,11 @@
 
 static void SetDefaults()
 {
+#ifdef IPOD
+	viewsize = 20; // Full stretch
+#else
 	viewsize = 15;
+#endif
 	
 	mouseenabled = false;
 
@@ -342,6 +346,9 @@
 
 int SaveTheGame(const char *fn, const char *tag, int dx, int dy)
 {
+	// For some reason, game saving takes forever (i.e. almost 10 minutes) on the iPod
+	// No idea why this is so and no idea if the game save even works/is real
+	
 	objtype *ob;
 	int fd, i, x, y;
 	int32_t cs;
@@ -410,9 +417,12 @@
 	
 		DiskFlopAnim(dx, dy);
 	
-		for (x = 0; x < 64; x++)
-			for (y = 0; y < 64; y++)
+		for (x = 0; x < 64; x++){
+			for (y = 0; y < 64; y++) {
 				WriteInt32(fd, actorat[x][y]);
+				DiskFlopAnim(dx, dy);
+			}
+		}
 	
 		DiskFlopAnim(dx, dy);
 			
@@ -463,12 +473,14 @@
 			WriteInt32(fd, statobjlist[i].shapenum);
 			WriteInt8(fd,  statobjlist[i].flags);
 			WriteInt8(fd,  statobjlist[i].itemnumber);
+			DiskFlopAnim(dx, dy);
 		}
 	
 		DiskFlopAnim(dx, dy);
 	
 		for (i = 0; i < 64; i++) { /* MAXDOORS */
 			WriteInt32(fd, doorposition[i]);
+			DiskFlopAnim(dx, dy);
 		}
 	
 		DiskFlopAnim(dx, dy);
@@ -480,6 +492,7 @@
 			WriteInt8(fd,  doorobjlist[i].lock);
 			WriteInt8(fd,  doorobjlist[i].action);
 			WriteInt32(fd, doorobjlist[i].ticcount);
+			DiskFlopAnim(dx, dy);
 		}
 	
 		DiskFlopAnim(dx, dy);
@@ -656,9 +669,12 @@
 	
 	DiskFlopAnim(dx, dy);
 	
-	for (x = 0; x < 64; x++)
-		for (y = 0; y < 64; y++)
+	for (x = 0; x < 64; x++) {
+		for (y = 0; y < 64; y++) {
 			actorat[x][y] = ReadInt32(fd);
+			DiskFlopAnim(dx, dy);
+		}
+	}
 	
 	DiskFlopAnim(dx, dy);
 			
@@ -701,10 +717,13 @@
 	player->temp3		= ReadInt32(fd);
 	
 	/* update the id */
-	for (x = 0; x < 64; x++)
-		for (y = 0; y < 64; y++)
+	for (x = 0; x < 64; x++) {
+		for (y = 0; y < 64; y++) {
 			if (actorat[x][y] == (id | 0x8000))
 				actorat[x][y] = player->id | 0x8000;
+			DiskFlopAnim(dx, dy);
+		}
+	}
 
 	while (1) {
 		DiskFlopAnim(dx, dy);
@@ -739,10 +758,13 @@
 		new->temp2		= ReadInt32(fd);
 		new->temp3		= ReadInt32(fd);
 		
-		for (x = 0; x < 64; x++)
-			for (y = 0; y < 64; y++)
+		for (x = 0; x < 64; x++) {
+			for (y = 0; y < 64; y++) {
 				if (actorat[x][y] == (id | 0x8000))
 					actorat[x][y] = new->id | 0x8000;
+				DiskFlopAnim(dx, dy);
+			}
+		}
 	}
 	
 	DiskFlopAnim(dx, dy);
@@ -755,12 +777,14 @@
 		statobjlist[i].flags		= ReadInt8(fd);
 		statobjlist[i].itemnumber	= ReadInt8(fd);
 		statobjlist[i].visspot 		= &spotvis[statobjlist[i].tilex][statobjlist[i].tiley];
+		DiskFlopAnim(dx, dy);
 	}
 	
 	DiskFlopAnim(dx, dy);
 	
 	for (i = 0; i < 64; i++) { /* MAXDOORS */
 		doorposition[i] 		= ReadInt32(fd);
+		DiskFlopAnim(dx, dy);
 	}
 	
 	DiskFlopAnim(dx, dy);
@@ -772,6 +796,7 @@
 		doorobjlist[i].lock	= ReadInt8(fd);
 		doorobjlist[i].action	= ReadInt8(fd);
 		doorobjlist[i].ticcount	= ReadInt32(fd);
+		DiskFlopAnim(dx, dy);
 	}
 	
 	DiskFlopAnim(dx, dy);
@@ -1367,6 +1392,9 @@
 	}
 		
 	printf("Now Loading %s\n", GAMENAME);
+#ifdef IPOD
+	printf("iPodLinux port by Keripo, Version K1\n");
+#endif
 		
 	CheckForEpisodes();
 
diff -ur wl_menu.c wl_menu.c
--- wl_menu.c	2007-12-22 07:42:25.000000000 -0500
+++ wl_menu.c	2008-08-12 18:15:27.656250000 -0400
@@ -278,6 +278,9 @@
 	//
 	// MAIN MENU LOOP
 	//
+#ifdef IPOD
+	in_menu = 1;
+#endif
 	do
 	{
 		which=HandleMenu(&MainItems,&MainMenu[0],NULL);
@@ -334,6 +337,9 @@
 				MenuFadeIn();
 				break;
 
+		#ifdef IPOD
+			case -1:
+		#endif
 			case backtodemo:
 				MM_SortMem();
 				StartGame=1;
@@ -342,7 +348,9 @@
 				VL_FadeOut(0,255,0,0,0,10);
 				break;
 
+		#ifndef IPOD
 			case -1:
+		#endif
 			case quit:
 				CP_Quit();
 				break;
@@ -359,6 +367,9 @@
 	// "EXIT OPTIONS" OR "NEW GAME" EXITS
 	//
 	} while(!StartGame);
+#ifdef IPOD
+	in_menu = 0;
+#endif
 
 	//
 	// DEALLOCATE EVERYTHING
@@ -2967,10 +2978,12 @@
 ////////////////////////////////////////////////////////////////////
 void WaitKeyUp(void)
 {
+#ifndef IPOD
 	ControlInfo ci;
 	while(ReadAnyControl(&ci), 
 		ci.button0|ci.button1|ci.button2|ci.button3|
 		IN_KeyDown(sc_Space)|IN_KeyDown(sc_Enter)|IN_KeyDown(sc_Escape));
+#endif
 }
 
 
@@ -3002,6 +3015,9 @@
 ////////////////////////////////////////////////////////////////////
 int Confirm(const char *string)
 {
+#ifdef IPOD
+	return 1; // No Y/N confirmation
+#else
 	int xit=0,x,y,tick=0,whichsnd[2]={ESCPRESSEDSND,SHOOTSND};
 
 	Message(string);
@@ -3049,6 +3065,7 @@
 	IN_ClearKeysDown();
 	SD_PlaySound(whichsnd[xit]);
 	return xit;
+#endif
 }
 
 ////////////////////////////////////////////////////////////////////
