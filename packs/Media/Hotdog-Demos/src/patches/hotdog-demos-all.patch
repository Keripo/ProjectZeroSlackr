Index: anim/main_anim.c
===================================================================
--- anim/main_anim.c	(revision 2423)
+++ anim/main_anim.c	(working copy)
@@ -310,6 +310,17 @@
 
 		SDL_Delay (30);
 #else
+#define SCROLL_MOD_NUM	24 // 100/25 - 1
+#define SCROLL_MOD(n) \
+  ({ \
+    static int sofar = 0; \
+    int use = 0; \
+    if (++sofar >= n) { \
+      sofar -= n; \
+      use = 1; \
+    } \
+    (use == 1); \
+  })
 		if (!noinput) {
 			FD_ZERO(&rd);
 			FD_SET(0, &rd);
@@ -325,6 +336,7 @@
 					done = 1;
 					break;
 				case 'r':
+					if (SCROLL_MOD(SCROLL_MOD_NUM)) {
 					if (benchmark) break;
 					if (obj[0].object->animating) {
 						add_pending(1);
@@ -334,8 +346,10 @@
 					circle_rotate(&obj[1], 1);
 					circle_rotate(&obj[2], 1);
 					circle_rotate(&obj[3], 1);
+					}
 					break;
 				case 'l':
+					if (SCROLL_MOD(SCROLL_MOD_NUM)) {
 					if (benchmark) break;
 					if (obj[0].object->animating) {
 						add_pending(-1);
@@ -345,6 +359,7 @@
 					circle_rotate(&obj[1], -1);
 					circle_rotate(&obj[2], -1);
 					circle_rotate(&obj[3], -1);
+					}
 					break;
 				case 'w':
 				case 'f':
Index: prim/main_prim.c
===================================================================
--- prim/main_prim.c	(revision 2423)
+++ prim/main_prim.c	(working copy)
@@ -32,6 +32,32 @@
 #endif
 }
 
+#ifdef IPOD
+#include <termios.h> 
+#include <sys/time.h>
+
+static struct termios stored_settings; 
+
+static void set_keypress()
+{
+	struct termios new_settings;
+	tcgetattr(0,&stored_settings);
+	new_settings = stored_settings;
+	new_settings.c_lflag &= ~(ICANON | ECHO | ISIG);
+	new_settings.c_iflag &= ~(ISTRIP | IGNCR | ICRNL | INLCR | IXOFF | IXON);
+	new_settings.c_cc[VTIME] = 0;
+	tcgetattr(0,&stored_settings);
+	new_settings.c_cc[VMIN] = 1;
+	tcsetattr(0,TCSANOW,&new_settings);
+}
+
+static void reset_keypress()
+{
+	tcsetattr(0,TCSANOW,&stored_settings);
+}
+
+#endif
+
 int main(int argc, char **argv)
 {
 	char eop = 0;
@@ -146,6 +172,13 @@
 		HD_Font_Draw(srf, font, 20, 15, 0xffffffff, "This is a FFF.");
 	}
 
+#ifdef IPOD
+	set_keypress();
+	fd_set rd;
+	struct timeval tv;
+	int n;
+	char ch;
+#endif
 	while (!eop) {
 #ifndef IPOD
 		SDL_Event e;
@@ -166,6 +199,24 @@
 		}
 		SDL_Delay(30);
 
+#else
+  		for (;;) {
+			FD_ZERO(&rd);
+			FD_SET(0, &rd);
+			tv.tv_sec = 0;
+			tv.tv_usec = 100;
+			n = select(0+1, &rd, NULL, NULL, &tv);
+			if (!FD_ISSET(0, &rd) || (n <= 0))
+				break;
+			read(0, &ch, 1);
+			switch(ch) {
+				case 'm':
+					eop = 1;
+					break;
+				default:
+					break;
+			}
+		}
 #endif
 #ifndef IPOD
 		if( SDL_MUSTLOCK(screen) )
@@ -180,6 +231,10 @@
 #endif
 		
 	}
+#ifdef IPOD
+	HD_LCD_Quit();
+	reset_keypress();
+#endif
 	return 0;
 	
 }
Index: select/main_select.c
===================================================================
--- select/main_select.c	(revision 2423)
+++ select/main_select.c	(working copy)
@@ -314,6 +314,17 @@
 
 		SDL_Delay (30);
 #else
+#define SCROLL_MOD_NUM	24 // 100/25 - 1
+#define SCROLL_MOD(n) \
+  ({ \
+    static int sofar = 0; \
+    int use = 0; \
+    if (++sofar >= n) { \
+      sofar -= n; \
+      use = 1; \
+    } \
+    (use == 1); \
+  })
 		if (!noinput) {
 			FD_ZERO(&rd);
 			FD_SET(0, &rd);
@@ -329,6 +340,7 @@
 					done = 1;
 					break;
 				case 'r':
+					if (SCROLL_MOD(SCROLL_MOD_NUM)) {
 					if (benchmark) break;
 					if (obj[0].object->animating) {
 						add_pending(1);
@@ -338,8 +350,10 @@
 					circle_rotate(&obj[1], 1);
 					circle_rotate(&obj[2], 1);
 					circle_rotate(&obj[3], 1);
+					}
 					break;
 				case 'l':
+					if (SCROLL_MOD(SCROLL_MOD_NUM)) {
 					if (benchmark) break;
 					if (obj[0].object->animating) {
 						add_pending(-1);
@@ -349,6 +362,7 @@
 					circle_rotate(&obj[1], -1);
 					circle_rotate(&obj[2], -1);
 					circle_rotate(&obj[3], -1);
+					}
 					break;
 				case 'w':
 				case 'f':
