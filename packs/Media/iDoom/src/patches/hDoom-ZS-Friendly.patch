diff -ur d_main.c d_main.c
--- d_main.c	2008-06-22 22:08:22.796875000 -0400
+++ d_main.c	2008-06-22 22:08:26.953125000 -0400
@@ -577,7 +577,7 @@
     char *doomwaddir;
     doomwaddir = getenv("DOOMWADDIR");
     if (!doomwaddir)
-	doomwaddir = ".";
+	doomwaddir = "/opt/Media/iDoom/IWADs";
 
     // Commercial.
     if (M_CheckParm ("-freedoom")) {
@@ -616,8 +616,8 @@
     doom2fwad = malloc(strlen(doomwaddir)+1+10+1);
     sprintf(doom2fwad, "%s/doom2f.wad", doomwaddir);
 
-    home = ".";
-    sprintf(basedefault, "%s/.doomrc", home);
+    home = "/opt/Media/iDoom/Conf";
+    sprintf(basedefault, "%s/doom.rc", home);
 #endif
 
     if (M_CheckParm ("-shdev"))
@@ -820,6 +820,7 @@
     else if (M_CheckParm ("-deathmatch"))
 	deathmatch = 1;
 
+#if 0
     switch ( gamemode )
     {
       case retail:
@@ -876,6 +877,7 @@
     }
     
     printf ("%s\n",title);
+#endif
 
     if (devparm)
 	printf(D_DEVSTR);
@@ -1014,19 +1016,19 @@
     }
     
     // init subsystems
-    printf ("V_Init: allocate screens.\n");
+    //printf ("V_Init: allocate screens.\n");
     V_Init ();
 
-    printf ("M_LoadDefaults: Load system defaults.\n");
+    //printf ("M_LoadDefaults: Load system defaults.\n");
     M_LoadDefaults ();              // load before initing other systems
 
-    printf ("Z_Init: Init zone memory allocation daemon. \n");
+    //printf ("Z_Init: Init zone memory allocation daemon. \n");
     Z_Init ();
 
-    printf ("W_Init: Init WADfiles.\n");
+    //printf ("W_Init: Init WADfiles.\n");
     W_InitMultipleFiles (wadfiles);
     
-
+#if 0
     // Check for -file in shareware
     if (modifiedgame)
     {
@@ -1093,29 +1095,30 @@
 	// Ouch.
 	break;
     }
+#endif
 
-    printf ("M_Init: Init miscellaneous info.\n");
+    //printf ("M_Init: Init miscellaneous info.\n");
     M_Init ();
 
-    printf ("R_Init: Init DOOM refresh daemon - ");
+    //printf ("R_Init: Init DOOM refresh daemon - ");
     R_Init ();
 
-    printf ("\nP_Init: Init Playloop state.\n");
+    //printf ("\nP_Init: Init Playloop state.\n");
     P_Init ();
 
-    printf ("I_Init: Setting up machine state.\n");
+    //printf ("I_Init: Setting up machine state.\n");
     I_Init ();
 
-    printf ("D_CheckNetGame: Checking network game status.\n");
+    //printf ("D_CheckNetGame: Checking network game status.\n");
     D_CheckNetGame ();
 
-    printf ("S_Init: Setting up sound.\n");
+    //printf ("S_Init: Setting up sound.\n");
     S_Init (snd_SfxVolume /* *8 */, snd_MusicVolume /* *8*/ );
 
-    printf ("HU_Init: Setting up heads up display.\n");
+    //printf ("HU_Init: Setting up heads up display.\n");
     HU_Init ();
 
-    printf ("ST_Init: Init status bar.\n");
+    //printf ("ST_Init: Init status bar.\n");
     ST_Init ();
 
     // check for a driver that wants intermission stats
@@ -1126,7 +1129,7 @@
 	extern  void*	statcopy;                            
 
 	statcopy = (void*)atoi(myargv[p+1]);
-	printf ("External statistics registered.\n");
+	//printf ("External statistics registered.\n");
     }
     
     // start the apropriate game based on parms
diff -ur d_net.c d_net.c
--- d_net.c	1997-12-22 15:32:33.000000000 -0500
+++ d_net.c	2008-06-22 22:11:17.984375000 -0400
@@ -574,8 +574,10 @@
     if (netgame)
 	D_ArbitrateNetStart ();
 
+/*
     printf ("startskill %i  deathmatch: %i  startmap: %i  startepisode: %i\n",
 	    startskill, deathmatch, startmap, startepisode);
+*/
 	
     // read values out of doomcom
     ticdup = doomcom->ticdup;
@@ -588,8 +590,10 @@
     for (i=0 ; i<doomcom->numnodes ; i++)
 	nodeingame[i] = true;
 	
+/*
     printf ("player %i of %i (%i nodes)\n",
 	    consoleplayer+1, doomcom->numplayers, doomcom->numnodes);
+*/
 
 }
 
diff -ur dstrings.h dstrings.h
--- dstrings.h	1997-12-22 15:06:00.000000000 -0500
+++ dstrings.h	2008-06-22 13:06:35.015625000 -0400
@@ -38,7 +38,7 @@
 #endif
 
 // Misc. other strings.
-#define SAVEGAMENAME	"doomsav"
+#define SAVEGAMENAME	"/opt/Media/iDoom/Saves/doomsav"
 
 
 //
diff -ur i_sound.c i_sound.c
--- i_sound.c	1997-12-22 14:57:15.000000000 -0500
+++ i_sound.c	2008-06-22 13:22:44.984375000 -0400
@@ -753,8 +753,8 @@
     strcat(buffer, " -quiet");
     sndserver = popen(buffer, "w");
   }
-  else
-    fprintf(stderr, "Could not start sound server [%s]\n", buffer);
+  //else
+    //fprintf(stderr, "Could not start sound server [%s]\n", buffer);
 #else
     
   int i;
diff -ur r_data.c r_data.c
--- r_data.c	2008-06-21 16:03:56.906250000 -0400
+++ r_data.c	2008-06-22 13:08:36.500000000 -0400
@@ -493,6 +493,7 @@
     temp1 = W_GetNumForName ("S_START");  // P_???????
     temp2 = W_GetNumForName ("S_END") - 1;
     temp3 = ((temp2-temp1+63)/64) + ((numtextures+63)/64);
+#if 0
     printf("[");
     for (i = 0; i < temp3; i++)
 	printf(" ");
@@ -500,11 +501,14 @@
     for (i = 0; i < temp3; i++)
 	printf("\x8");
     printf("\x8\x8\x8\x8\x8\x8\x8\x8\x8\x8");	
+#endif
 	
     for (i=0 ; i<numtextures ; i++, directory++)
     {
+    /*
 	if (!(i&63))
 	    printf (".");
+    */
 
 	if (i == numtextures1)
 	{
@@ -615,8 +619,10 @@
 	
     for (i=0 ; i< numspritelumps ; i++)
     {
+    /*
 	if (!(i&63))
 	    printf (".");
+    */
 
 	patch = W_CacheLumpNum (firstspritelump+i, PU_CACHE);
 	spritewidth[i] = SHORT(patch->width)<<FRACBITS;
@@ -654,13 +660,13 @@
 void R_InitData (void)
 {
     R_InitTextures ();
-    printf ("\nInitTextures");
+    //printf ("\nInitTextures");
     R_InitFlats ();
-    printf ("\nInitFlats");
+    //printf ("\nInitFlats");
     R_InitSpriteLumps ();
-    printf ("\nInitSprites");
+    //printf ("\nInitSprites");
     R_InitColormaps ();
-    printf ("\nInitColormaps");
+    //printf ("\nInitColormaps");
 }
 
 
diff -ur r_main.c r_main.c
--- r_main.c	2008-06-21 16:03:56.906250000 -0400
+++ r_main.c	2008-06-22 13:08:57.421875000 -0400
@@ -773,22 +773,22 @@
 void R_Init (void)
 {
     R_InitData ();
-    printf ("\nR_InitData");
+    //printf ("\nR_InitData");
     R_InitPointToAngle ();
-    printf ("\nR_InitPointToAngle");
+    //printf ("\nR_InitPointToAngle");
     R_InitTables ();
     // viewwidth / viewheight / detailLevel are set by the defaults
-    printf ("\nR_InitTables");
+    //printf ("\nR_InitTables");
 
     R_SetViewSize (screenblocks, detailLevel);
     R_InitPlanes ();
-    printf ("\nR_InitPlanes");
+    //printf ("\nR_InitPlanes");
     R_InitLightTables ();
-    printf ("\nR_InitLightTables");
+    //printf ("\nR_InitLightTables");
     R_InitSkyMap ();
-    printf ("\nR_InitSkyMap");
+    //printf ("\nR_InitSkyMap");
     R_InitTranslationTables ();
-    printf ("\nR_InitTranslationsTables");
+    //printf ("\nR_InitTranslationsTables");
 	
     framecount = 0;
 }
diff -ur w_wad.c w_wad.c
--- w_wad.c	2008-06-21 16:03:56.921875000 -0400
+++ w_wad.c	2008-06-22 13:09:14.796875000 -0400
@@ -166,7 +166,7 @@
 	return;
     }
 
-    printf (" adding %s\n",filename);
+    printf ("WAD: %s\n",filename);
     startlump = numlumps;
 	
     if (strcmpi (filename+strlen(filename)-3 , "wad" ) )
