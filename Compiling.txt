Last updated: July 17, 2008
~Keripo


== Compiling ==

I've taken the time and liberty of writing neat little
compiling scripts that will do all the dirty work for you.
The only requirement is a development environment (Linux
is suggested though things can be done via Mac OS X or
Cygwin for Windows) and a bit of knowledge/common sense.

Each pack will have a "build.sh" script. To compile the pack,
all you need to "cd" to that directory and type "./build.sh"
and sit back. All packs also symlink the "ttk" and "launch"
libraries for compiling the launch modules outside PZ2.
If compiling goes smoothly and the echo'd output is all
nice and smooth, you will find the compiled files in the new
"build/release" folder already set up and ready to be added
to the ZeroSlackr Framework. If there are issues, look at
the "build/build.log" file.

Note that if you are compiling for SansaLinux, you much
first type "export SANSA=1" before runing the build scripts.
Not all content has been ported to SansaLinux and so some
packs/content will be skipped.

For convenience I've also written "lump.sh", "clean.sh",
"chmod-all.sh", and "rm-backups.sh" scripts. They can be
used by doing a "cd" to the proper directory, then doing
"./lump.sh", "./clean.sh", or "./rm-backups.sh". The
"rm-backups.sh" script is mainly for Linux as annoying
*~ backup files are often created here and there; the script
carries out a search-and-destroy mission on these files.
The "chmod-all.sh" script will conveniently execute
"chmod ugo+rwx" on all the script files so you dont' have to.
The "lump.sh" script will recursively enter
each pack's folder, execute the pack's "build.sh", copy the
content of that pack's "build/release" into one large "_lump"
folder that can be directly copied to an iPod (note that the
"build" folders will be deleted to conserve space so if there
are any building problems, build that pack separately and see
the "build.log" file). The "clean.sh" script, on the other
hand, recursively enters each folder and removes the "build"
folder. The exception to both of these scripts are the
podzilla0 libraries (for which I have forgotten how to build
and thus just have precompiled libraries), the "launch"
library, and packs that have the "SKIP.txt" file.
